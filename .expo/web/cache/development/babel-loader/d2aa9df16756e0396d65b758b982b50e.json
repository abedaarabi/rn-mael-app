{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _mealAction = require(\"../store/actions/mealAction\");\n\nvar _counterSlice = require(\"../redux/counterSlice\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\abma\\\\Desktop\\\\React-native\\\\meal-app\\\\screens\\\\MealDetailScreen.js\";\n\nvar inq = function inq(data) {\n  return data.map(function (item, idx) {\n    return _react.default.createElement(_reactNative.View, {\n      style: styles.listItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, item));\n  });\n};\n\nvar MealDetailScreen = function MealDetailScreen(props) {\n  var mealId = props.route.params.params.mealId;\n  var availableMeals = (0, _reactRedux.useSelector)(function (state) {\n    return state.meals.meals;\n  });\n  var updatedFav = (0, _reactRedux.useSelector)(function (state) {\n    return state.meals.favoriteMeals;\n  });\n\n  if (condition) {}\n\n  console.log(availableMeals, \"updatedFav\");\n  var catgeoryName = availableMeals.find(function (cat) {\n    return cat.id === mealId;\n  });\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var s = updatedFav ? \"blue\" : \"red\";\n\n  _react.default.useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return _react.default.createElement(_reactNative.Button, {\n          title: \"fav\",\n          color: s,\n          onPress: function onPress() {\n            return dispatch((0, _counterSlice.TOGGLE_FAVORITE)(mealId));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }\n        });\n      }\n    });\n  });\n\n  var textColor = catgeoryName.complexity === \"simple\" ? {\n    color: \"green\"\n  } : {\n    color: \"red\"\n  };\n  return _react.default.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: {\n      uri: catgeoryName.imageUrl\n    },\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.details,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, catgeoryName.duration, \"m\"), _react.default.createElement(_reactNative.Text, {\n    style: textColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, catgeoryName.complexity.toUpperCase()), _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, catgeoryName.affordability.toUpperCase())), _react.default.createElement(_reactNative.Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \" Ingredients\"), inq(catgeoryName.ingredients), _react.default.createElement(_reactNative.Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"steps\"), inq(catgeoryName.steps));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  details: {\n    flexDirection: \"row\",\n    padding: 12,\n    justifyContent: \"space-around\"\n  },\n  image: {\n    width: \"100%\",\n    height: 200\n  },\n  title: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 22,\n    textAlign: \"center\"\n  },\n  listItem: {\n    marginHorizontal: 20,\n    marginVertical: 10,\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 10\n  }\n});\n\nvar _default = MealDetailScreen;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/abma/Desktop/React-native/meal-app/screens/MealDetailScreen.js"],"names":["inq","data","map","item","idx","styles","listItem","MealDetailScreen","props","mealId","route","params","availableMeals","state","meals","updatedFav","favoriteMeals","condition","console","log","catgeoryName","find","cat","id","dispatch","s","React","useLayoutEffect","navigation","setOptions","headerRight","textColor","complexity","color","uri","imageUrl","image","details","duration","toUpperCase","affordability","title","ingredients","steps","StyleSheet","create","screen","flex","justifyContent","alignItems","flexDirection","padding","width","height","fontFamily","fontSize","textAlign","marginHorizontal","marginVertical","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  ScrollView,\r\n  Image,\r\n} from \"react-native\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { taggleFavorite } from \"../store/actions/mealAction\";\r\nimport {\r\n  TOGGLE_FAVORITE,\r\n  FILTERED_MEALS,\r\n  REST_FILTER,\r\n} from \"../redux/counterSlice\";\r\nconst inq = (data) => {\r\n  return data.map((item, idx) => {\r\n    return (\r\n      <View style={styles.listItem}>\r\n        <Text key={item}>{item}</Text>\r\n      </View>\r\n    );\r\n  });\r\n};\r\n\r\nconst MealDetailScreen = (props) => {\r\n  const { mealId } = props.route.params.params;\r\n\r\n  const availableMeals = useSelector((state) => state.meals.meals);\r\n\r\n  const updatedFav = useSelector((state) => state.meals.favoriteMeals);\r\n\r\n  if (condition) {\r\n    \r\n  }\r\n\r\n  console.log(availableMeals, \"updatedFav\");\r\n  const catgeoryName = availableMeals.find((cat) => cat.id === mealId);\r\n\r\n  const dispatch = useDispatch();\r\n  const s = updatedFav ? \"blue\" : \"red\";\r\n  React.useLayoutEffect(() => {\r\n    props.navigation.setOptions({\r\n      headerRight: () => (\r\n        <Button\r\n          title=\"fav\"\r\n          color={s}\r\n          onPress={() => dispatch(TOGGLE_FAVORITE(mealId))}\r\n        />\r\n      ),\r\n    });\r\n  });\r\n  const textColor =\r\n    catgeoryName.complexity === \"simple\"\r\n      ? { color: \"green\" }\r\n      : { color: \"red\" };\r\n  return (\r\n    <ScrollView>\r\n      <Image source={{ uri: catgeoryName.imageUrl }} style={styles.image} />\r\n\r\n      <View style={styles.details}>\r\n        <Text>{catgeoryName.duration}m</Text>\r\n        <Text style={textColor}>{catgeoryName.complexity.toUpperCase()}</Text>\r\n        <Text>{catgeoryName.affordability.toUpperCase()}</Text>\r\n      </View>\r\n      <Text style={styles.title}> Ingredients</Text>\r\n      {inq(catgeoryName.ingredients)}\r\n      <Text style={styles.title}>steps</Text>\r\n      {inq(catgeoryName.steps)}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\n// MealDetailScreen.navigationOptions = (navigationData) => {\r\n//   const { mealId } = navigationData.route.params.params;\r\n//   console.log(mealId, \"abed\");\r\n\r\n//   const catgeoryName = MEALS.find((cat) => cat.id === mealId);\r\n//   return {\r\n//     headerTitle: catgeoryName.title + \"hello\",\r\n//     headerRight: (\r\n//       <HeaderButtons>\r\n//         <Item title=\"Favorite\" iconName=\"ios-star\" onPress={() => {}} />\r\n//         <CustomHeaderButton />,\r\n//       </HeaderButtons>\r\n//     ),\r\n//   };\r\n// };\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  details: {\r\n    flexDirection: \"row\",\r\n    padding: 12,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: 200,\r\n  },\r\n  title: {\r\n    fontFamily: \"open-sans-bold\",\r\n    fontSize: 22,\r\n    textAlign: \"center\",\r\n  },\r\n  listItem: {\r\n    marginHorizontal: 20,\r\n\r\n    marginVertical: 10,\r\n    borderColor: \"#ccc\",\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default MealDetailScreen;\r\n"]},"metadata":{},"sourceType":"script"}
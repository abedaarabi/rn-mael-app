{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mealsReducer = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _dummyData = require(\"../../data/dummy-data\");\n\nvar _mealAction = require(\"../actions/mealAction\");\n\nvar inialState = {\n  meals: _dummyData.MEALS,\n  filterMeals: [],\n  favoriteMeals: []\n};\n\nvar mealsReducer = function mealsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _mealAction.TOGGLE_FAVORITE:\n      var isIndex = state.favoriteMeals.findIndex(function (meal) {\n        return meal.id === action.mealId;\n      });\n\n      if (isIndex >= 0) {\n        var updatedFavMeals = (0, _toConsumableArray2.default)(state.favoriteMeals);\n        updatedFavMeals.splice(isIndex, 1);\n        return (0, _extends2.default)({}, state, {\n          favoriteMeals: updatedFavMeals\n        });\n      } else {\n        var addedMeal = state.meals.find(function (meal) {\n          return meal.id === action.mealId;\n        });\n        return (0, _extends2.default)({}, state, {\n          favoriteMeals: state.favoriteMeals.concat(addedMeal)\n        });\n      }\n\n    case _mealAction.FILTERED_MEALS:\n      var applyFilter = action.filter;\n      var updateFilterMeals = state.meals.filter(function (meal) {\n        if (applyFilter.gultenFree && meal.isGlutenFree) {\n          return true;\n        }\n\n        if (applyFilter.lactoseFree && meal.isLactoseFree) {\n          return true;\n        }\n\n        if (applyFilter.vegan && meal.isVegan) {\n          return true;\n        }\n\n        if (applyFilter.vegetarian && meal.isVegetarian) {\n          return true;\n        }\n      });\n      return (0, _extends2.default)({}, state, {\n        filterMeals: updateFilterMeals\n      });\n\n    case _mealAction.REST_FILTER:\n      return (0, _extends2.default)({}, state, {\n        filterMeals: state.meals\n      });\n\n    default:\n      return state;\n  }\n};\n\nexports.mealsReducer = mealsReducer;","map":{"version":3,"sources":["C:/Users/abma/Desktop/React-native/meal-app/store/reducers/meals.js"],"names":["inialState","meals","MEALS","filterMeals","favoriteMeals","mealsReducer","state","action","type","TOGGLE_FAVORITE","isIndex","findIndex","meal","id","mealId","updatedFavMeals","splice","addedMeal","find","concat","FILTERED_MEALS","applyFilter","filter","updateFilterMeals","gultenFree","isGlutenFree","lactoseFree","isLactoseFree","vegan","isVegan","vegetarian","isVegetarian","REST_FILTER"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAKA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAEC,gBADU;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,aAAa,EAAE;AAHE,CAAnB;;AAMO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAgC;AAAA,MAA/BC,KAA+B,uEAAvBN,UAAuB;AAAA,MAAXO,MAAW;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,2BAAL;AACE,UAAMC,OAAO,GAAGJ,KAAK,CAACF,aAAN,CAAoBO,SAApB,CACd,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,MAA7B;AAAA,OADc,CAAhB;;AAIA,UAAIJ,OAAO,IAAI,CAAf,EAAkB;AAChB,YAAMK,eAAe,oCAAOT,KAAK,CAACF,aAAb,CAArB;AACAW,QAAAA,eAAe,CAACC,MAAhB,CAAuBN,OAAvB,EAAgC,CAAhC;AACA,0CACKJ,KADL;AAEEF,UAAAA,aAAa,EAAEW;AAFjB;AAID,OAPD,MAOO;AACL,YAAME,SAAS,GAAGX,KAAK,CAACL,KAAN,CAAYiB,IAAZ,CAAiB,UAACN,IAAD;AAAA,iBAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,MAA7B;AAAA,SAAjB,CAAlB;AACA,0CACKR,KADL;AAEEF,UAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBe,MAApB,CAA2BF,SAA3B;AAFjB;AAID;;AAEH,SAAKG,0BAAL;AACE,UAAMC,WAAW,GAAGd,MAAM,CAACe,MAA3B;AACA,UAAMC,iBAAiB,GAAGjB,KAAK,CAACL,KAAN,CAAYqB,MAAZ,CAAmB,UAACV,IAAD,EAAU;AACrD,YAAIS,WAAW,CAACG,UAAZ,IAA0BZ,IAAI,CAACa,YAAnC,EAAiD;AAC/C,iBAAO,IAAP;AACD;;AACD,YAAIJ,WAAW,CAACK,WAAZ,IAA2Bd,IAAI,CAACe,aAApC,EAAmD;AACjD,iBAAO,IAAP;AACD;;AACD,YAAIN,WAAW,CAACO,KAAZ,IAAqBhB,IAAI,CAACiB,OAA9B,EAAuC;AACrC,iBAAO,IAAP;AACD;;AACD,YAAIR,WAAW,CAACS,UAAZ,IAA0BlB,IAAI,CAACmB,YAAnC,EAAiD;AAC/C,iBAAO,IAAP;AACD;AACF,OAbyB,CAA1B;AAcA,wCAAYzB,KAAZ;AAAmBH,QAAAA,WAAW,EAAEoB;AAAhC;;AACF,SAAKS,uBAAL;AACE,wCAAY1B,KAAZ;AAAmBH,QAAAA,WAAW,EAAEG,KAAK,CAACL;AAAtC;;AACF;AACE,aAAOK,KAAP;AAzCJ;AA2CD,CA5CM","sourcesContent":["import { MEALS } from \"../../data/dummy-data\";\r\n\r\nimport {\r\n  TOGGLE_FAVORITE,\r\n  FILTERED_MEALS,\r\n  REST_FILTER,\r\n} from \"../actions/mealAction\";\r\nconst inialState = {\r\n  meals: MEALS,\r\n  filterMeals: [],\r\n  favoriteMeals: [],\r\n};\r\n\r\nexport const mealsReducer = (state = inialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_FAVORITE:\r\n      const isIndex = state.favoriteMeals.findIndex(\r\n        (meal) => meal.id === action.mealId\r\n      );\r\n\r\n      if (isIndex >= 0) {\r\n        const updatedFavMeals = [...state.favoriteMeals];\r\n        updatedFavMeals.splice(isIndex, 1);\r\n        return {\r\n          ...state,\r\n          favoriteMeals: updatedFavMeals,\r\n        };\r\n      } else {\r\n        const addedMeal = state.meals.find((meal) => meal.id === action.mealId);\r\n        return {\r\n          ...state,\r\n          favoriteMeals: state.favoriteMeals.concat(addedMeal),\r\n        };\r\n      }\r\n\r\n    case FILTERED_MEALS:\r\n      const applyFilter = action.filter;\r\n      const updateFilterMeals = state.meals.filter((meal) => {\r\n        if (applyFilter.gultenFree && meal.isGlutenFree) {\r\n          return true;\r\n        }\r\n        if (applyFilter.lactoseFree && meal.isLactoseFree) {\r\n          return true;\r\n        }\r\n        if (applyFilter.vegan && meal.isVegan) {\r\n          return true;\r\n        }\r\n        if (applyFilter.vegetarian && meal.isVegetarian) {\r\n          return true;\r\n        }\r\n      });\r\n      return { ...state, filterMeals: updateFilterMeals };\r\n    case REST_FILTER:\r\n      return { ...state, filterMeals: state.meals };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}
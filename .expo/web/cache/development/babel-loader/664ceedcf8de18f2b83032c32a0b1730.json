{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Color = _interopRequireDefault(require(\"../constants/Color\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _mealAction = require(\"../store/actions/mealAction\");\n\nvar _counterSlice = require(\"../redux/counterSlice\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\abma\\\\Desktop\\\\React-native\\\\meal-app\\\\screens\\\\FiltersScreen.js\";\n\nvar FilterSwitch = function FilterSwitch(props) {\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.filterContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, props.title), _react.default.createElement(_reactNative.Switch, {\n    value: props.state,\n    onValueChange: props.onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar FiltersScreen = function FiltersScreen(props) {\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      gultenFree = _React$useState2[0],\n      setGultenFree = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(false),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      lactoseFree = _React$useState4[0],\n      setLactoseFree = _React$useState4[1];\n\n  var _React$useState5 = _react.default.useState(false),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      vegan = _React$useState6[0],\n      setVegan = _React$useState6[1];\n\n  var _React$useState7 = _react.default.useState(false),\n      _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n      vegetarian = _React$useState8[0],\n      setVegetarian = _React$useState8[1];\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var saveFilter = _react.default.useCallback(function () {\n    var appliedFilter = {\n      gultenFree: gultenFree,\n      lactoseFree: lactoseFree,\n      vegan: vegan,\n      vegetarian: vegetarian\n    };\n    dispatch((0, _counterSlice.FILTERED_MEALS)(appliedFilter));\n  }, [gultenFree, lactoseFree, vegan, vegetarian]);\n\n  _react.default.useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return _react.default.createElement(_reactNative.Button, {\n          title: \"Save\",\n          onPress: saveFilter,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  });\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Filter Meal Screen\"), _react.default.createElement(FilterSwitch, {\n    title: \"Gluten Free\",\n    state: gultenFree,\n    onChange: function onChange(newVlue) {\n      return setGultenFree(newVlue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(FilterSwitch, {\n    title: \"Lactose Free\",\n    state: lactoseFree,\n    onChange: function onChange(newVlue) {\n      return setLactoseFree(newVlue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(FilterSwitch, {\n    title: \"Vegan\",\n    state: vegan,\n    onChange: function onChange(newVlue) {\n      return setVegan(newVlue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(FilterSwitch, {\n    title: \"Vegetarian\",\n    state: vegetarian,\n    onChange: function onChange(newVlue) {\n      return setVegetarian(newVlue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  title: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 22,\n    margin: 20,\n    textAlign: \"center\"\n  },\n  filterContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"80%\",\n    marginVertical: 6\n  }\n});\n\nvar _default = FiltersScreen;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/abma/Desktop/React-native/meal-app/screens/FiltersScreen.js"],"names":["FilterSwitch","props","styles","filterContainer","title","state","onChange","FiltersScreen","React","useState","gultenFree","setGultenFree","lactoseFree","setLactoseFree","vegan","setVegan","vegetarian","setVegetarian","dispatch","saveFilter","useCallback","appliedFilter","useLayoutEffect","navigation","setOptions","headerRight","screen","newVlue","StyleSheet","create","flex","alignItems","fontFamily","fontSize","margin","textAlign","flexDirection","justifyContent","width","marginVertical"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Switch, Button } from \"react-native\";\r\nimport Color from \"../constants/Color\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterMeals } from \"../store/actions/mealAction\";\r\n\r\nimport {\r\n  TOGGLE_FAVORITE,\r\n  FILTERED_MEALS,\r\n  REST_FILTER,\r\n} from \"../redux/counterSlice\";\r\nconst FilterSwitch = (props) => (\r\n  <View style={styles.filterContainer}>\r\n    <Text>{props.title}</Text>\r\n    <Switch\r\n      value={props.state}\r\n      onValueChange={props.onChange}\r\n      // trackColor={{ true: Color.primaryColor }}\r\n      // thumbColor={Color.primaryColor}\r\n    />\r\n  </View>\r\n);\r\n\r\nconst FiltersScreen = (props) => {\r\n  const [gultenFree, setGultenFree] = React.useState(false);\r\n  const [lactoseFree, setLactoseFree] = React.useState(false);\r\n  const [vegan, setVegan] = React.useState(false);\r\n  const [vegetarian, setVegetarian] = React.useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const saveFilter = React.useCallback(() => {\r\n    const appliedFilter = {\r\n      gultenFree,\r\n      lactoseFree,\r\n      vegan,\r\n      vegetarian,\r\n    };\r\n    dispatch(FILTERED_MEALS(appliedFilter));\r\n  }, [gultenFree, lactoseFree, vegan, vegetarian]);\r\n\r\n  React.useLayoutEffect(() => {\r\n    props.navigation.setOptions({\r\n      headerRight: () => <Button title=\"Save\" onPress={saveFilter} />,\r\n    });\r\n  });\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Text style={styles.title}>Filter Meal Screen</Text>\r\n      <FilterSwitch\r\n        title=\"Gluten Free\"\r\n        state={gultenFree}\r\n        onChange={(newVlue) => setGultenFree(newVlue)}\r\n      />\r\n      <FilterSwitch\r\n        title=\"Lactose Free\"\r\n        state={lactoseFree}\r\n        onChange={(newVlue) => setLactoseFree(newVlue)}\r\n      />\r\n      <FilterSwitch\r\n        title=\"Vegan\"\r\n        state={vegan}\r\n        onChange={(newVlue) => setVegan(newVlue)}\r\n      />\r\n      <FilterSwitch\r\n        title=\"Vegetarian\"\r\n        state={vegetarian}\r\n        onChange={(newVlue) => setVegetarian(newVlue)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontFamily: \"open-sans-bold\",\r\n    fontSize: 22,\r\n    margin: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  filterContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"80%\",\r\n    marginVertical: 6,\r\n  },\r\n});\r\n\r\nexport default FiltersScreen;\r\n"]},"metadata":{},"sourceType":"script"}
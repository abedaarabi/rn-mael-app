{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import { MEALS } from \"../../data/dummy-data\";\r\n\r\n// import {\r\n//   TOGGLE_FAVORITE,\r\n//   FILTERED_MEALS,\r\n//   REST_FILTER,\r\n// } from \"../actions/mealAction\";\r\n// const inialState = {\r\n//   meals: MEALS,\r\n//   filterMeals: [],\r\n//   favoriteMeals: [],\r\n// };\r\n\r\n// export const mealsReducer = (state = inialState, action) => {\r\n//   switch (action.type) {\r\n//     case TOGGLE_FAVORITE:\r\n//       const isIndex = state.favoriteMeals.findIndex(\r\n//         (meal) => meal.id === action.mealId\r\n//       );\r\n\r\n//       if (isIndex >= 0) {\r\n//         const updatedFavMeals = [...state.favoriteMeals];\r\n//         updatedFavMeals.splice(isIndex, 1);\r\n//         return {\r\n//           ...state,\r\n//           favoriteMeals: updatedFavMeals,\r\n//         };\r\n//       } else {\r\n//         const addedMeal = state.meals.find((meal) => meal.id === action.mealId);\r\n//         return {\r\n//           ...state,\r\n//           favoriteMeals: state.favoriteMeals.concat(addedMeal),\r\n//         };\r\n//       }\r\n\r\n//     case FILTERED_MEALS:\r\n//       const applyFilter = action.filter;\r\n//       const updateFilterMeals = state.meals.filter((meal) => {\r\n//         if (applyFilter.gultenFree && meal.isGlutenFree) {\r\n//           return true;\r\n//         }\r\n//         if (applyFilter.lactoseFree && meal.isLactoseFree) {\r\n//           return true;\r\n//         }\r\n//         if (applyFilter.vegan && meal.isVegan) {\r\n//           return true;\r\n//         }\r\n//         if (applyFilter.vegetarian && meal.isVegetarian) {\r\n//           return true;\r\n//         }\r\n//       });\r\n//       return { ...state, filterMeals: updateFilterMeals };\r\n//     case REST_FILTER:\r\n//       return { ...state, filterMeals: state.meals };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n"]},"metadata":{},"sourceType":"script"}